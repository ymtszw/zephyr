module Data.ColumnItem exposing
    ( ColumnItem, new
    , author, timestamp, kts, embeddedBlocks, attachedFiles
    )

{-| ViewModel for items in columns. Involves many types :o

Message data types generated by individual sources must be converted to ColumnItem.
This module provides various builder functions for that purpose.

@docs ColumnItem, new
@docs author, timestamp, kts, embeddedBlocks, attachedFiles

-}

import Color exposing (Color)
import Data.ColumnItem.Contents exposing (..)
import Data.ColumnItem.EmbeddedBlock exposing (EmbeddedBlock)
import Data.ColumnItem.NamedEntity exposing (NamedEntity)
import Time


type alias ColumnItem =
    { id : String
    , author : Maybe NamedEntity
    , timestamp : Maybe Time.Posix
    , body : Text
    , kts : KTS
    , embeddedBlocks : List EmbeddedBlock
    , attachedFiles : List AttachedFile
    , reactions : List () -- TODO
    }


new : String -> Text -> ColumnItem
new id body =
    { id = id
    , author = Nothing
    , timestamp = Nothing
    , body = body
    , kts = []
    , embeddedBlocks = []
    , attachedFiles = []
    , reactions = []
    }


author : NamedEntity -> ColumnItem -> ColumnItem
author val old =
    { old | author = Just val }


timestamp : Time.Posix -> ColumnItem -> ColumnItem
timestamp val old =
    { old | timestamp = Just val }


kts : KTS -> ColumnItem -> ColumnItem
kts val old =
    { old | kts = val }


embeddedBlocks : List EmbeddedBlock -> ColumnItem -> ColumnItem
embeddedBlocks val old =
    { old | embeddedBlocks = val }


attachedFiles : List AttachedFile -> ColumnItem -> ColumnItem
attachedFiles val old =
    { old | attachedFiles = val }
