module Data.ColumnItem exposing
    ( ColumnItem, new
    , timestamp, kts, embeddedMatters, attachedFiles
    )

{-| ViewModel for items in columns. Involves many types :o

Message data types generated by individual sources must be converted to ColumnItem.
This module provides various builder functions for that purpose.

@docs ColumnItem, new
@docs timestamp, kts, embeddedMatters, attachedFiles

-}

import Color exposing (Color)
import Data.ColumnItem.Contents exposing (..)
import Data.ColumnItem.EmbeddedMatter exposing (EmbeddedMatter)
import Data.ColumnItem.NamedEntity exposing (NamedEntity)
import Time


type alias ColumnItem =
    { id : String
    , author : NamedEntity
    , timestamp : Maybe Time.Posix
    , body : Text
    , kts : KTS
    , embeddedMatters : List EmbeddedMatter
    , attachedFiles : List AttachedFile
    , reactions : List () -- TODO
    }


new : String -> NamedEntity -> Text -> ColumnItem
new id author body =
    { id = id
    , author = author
    , timestamp = Nothing
    , body = body
    , kts = []
    , embeddedMatters = []
    , attachedFiles = []
    , reactions = []
    }


timestamp : Time.Posix -> ColumnItem -> ColumnItem
timestamp val old =
    { old | timestamp = Just val }


kts : KTS -> ColumnItem -> ColumnItem
kts val old =
    { old | kts = val }


embeddedMatters : List EmbeddedMatter -> ColumnItem -> ColumnItem
embeddedMatters val old =
    { old | embeddedMatters = val }


attachedFiles : List AttachedFile -> ColumnItem -> ColumnItem
attachedFiles val old =
    { old | attachedFiles = val }
